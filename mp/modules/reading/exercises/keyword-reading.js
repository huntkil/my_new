// ÌïµÏã¨ Îã®Ïñ¥ Ï∞æÍ∏∞ Ïó∞Ïäµ JavaScript
class KeywordReadingExercise {
    constructor() {
        this.isReading = false;
        this.startTime = null;
        this.timer = null;
        this.currentMode = 'highlight'; // 'highlight' or 'hide'
        this.keywordData = window.keywordData || {};
        this.recognizedKeywords = new Set();
        this.subvocalizationCount = 0;
        this.keywordRecognition = 0;
        
        this.initializeElements();
        this.bindEvents();
        this.setupKeywordHighlighting();
    }

    initializeElements() {
        // Î≤ÑÌäºÎì§
        this.startBtn = document.getElementById('start-keyword');
        this.stopBtn = document.getElementById('stop-keyword');
        this.resetBtn = document.getElementById('reset-keyword');
        this.highlightModeBtn = document.getElementById('highlight-mode');
        this.hideModeBtn = document.getElementById('hide-mode');
        
        // ÌÖçÏä§Ìä∏ ÏòÅÏó≠
        this.textContainer = document.getElementById('text-container');
        this.readingText = document.getElementById('reading-text');
        
        // ÏÉÅÌÉú ÌëúÏãú
        this.keywordIndicator = document.getElementById('keyword-indicator');
        this.keywordTime = document.getElementById('keyword-time');
        this.keywordProgress = document.getElementById('keyword-progress');
        this.currentWpm = document.getElementById('current-wpm');
        this.wpmProgress = document.getElementById('wpm-progress');
        this.keywordRecognitionElement = document.getElementById('keyword-recognition');
        this.recognitionProgress = document.getElementById('recognition-progress');
        
        // ÏÜçÎ∞úÏùå Í∞êÏßÄ
        this.subvocalizationIndicator = document.getElementById('subvocalization-indicator');
        this.subvocalizationText = document.getElementById('subvocalization-text');
        
        // ÌîºÎìúÎ∞±
        this.realTimeFeedback = document.getElementById('real-time-feedback');
        this.exerciseResults = document.getElementById('exercise-results');
        
        // Í≤∞Í≥º ÌëúÏãú
        this.finalWpm = document.getElementById('final-wpm');
        this.finalRecognition = document.getElementById('final-recognition');
        this.practiceTime = document.getElementById('practice-time');
        this.aiFeedbackText = document.getElementById('ai-feedback-text');
    }

    bindEvents() {
        this.startBtn.addEventListener('click', () => this.startReading());
        this.stopBtn.addEventListener('click', () => this.stopReading());
        this.resetBtn.addEventListener('click', () => this.resetExercise());
        this.highlightModeBtn.addEventListener('click', () => this.setHighlightMode());
        this.hideModeBtn.addEventListener('click', () => this.setHideMode());
        
        // ÌÇ§Î≥¥Îìú Îã®Ï∂ïÌÇ§
        document.addEventListener('keydown', (e) => {
            if (e.code === 'Space' && !this.isReading) {
                e.preventDefault();
                this.startReading();
            } else if (e.code === 'Escape' && this.isReading) {
                this.stopReading();
            } else if (e.code === 'KeyH') {
                this.setHighlightMode();
            } else if (e.code === 'KeyD') {
                this.setHideMode();
            }
        });
    }

    setupKeywordHighlighting() {
        // Ï¥àÍ∏∞ ÌïòÏù¥ÎùºÏù¥Ìä∏ Î™®Îìú ÏÑ§Ï†ï
        this.setHighlightMode();
    }

    setHighlightMode() {
        this.currentMode = 'highlight';
        this.highlightModeBtn.className = 'px-3 py-1 rounded text-sm font-medium bg-blue-600 text-white';
        this.hideModeBtn.className = 'px-3 py-1 rounded text-sm font-medium bg-muted text-muted-foreground';
        
        this.applyHighlightMode();
        this.realTimeFeedback.textContent = 'ÌïòÏù¥ÎùºÏù¥Ìä∏ Î™®Îìú: ÌïµÏã¨ Îã®Ïñ¥Í∞Ä Í∞ïÏ°∞ÎêòÏñ¥ ÌëúÏãúÎê©ÎãàÎã§.';
    }

    setHideMode() {
        this.currentMode = 'hide';
        this.highlightModeBtn.className = 'px-3 py-1 rounded text-sm font-medium bg-muted text-muted-foreground';
        this.hideModeBtn.className = 'px-3 py-1 rounded text-sm font-medium bg-blue-600 text-white';
        
        this.applyHideMode();
        this.realTimeFeedback.textContent = 'Ïà®ÍπÄ Î™®Îìú: Í∏∞Îä•Ïñ¥Í∞Ä Ïà®Í≤®Ï†∏ ÌïµÏã¨ Îã®Ïñ¥Îßå ÌëúÏãúÎê©ÎãàÎã§.';
    }

    applyHighlightMode() {
        let text = this.keywordData.text || '';
        
        // ÌÇ§ÏõåÎìú ÌïòÏù¥ÎùºÏù¥Ìä∏
        this.keywordData.keywords.forEach(keyword => {
            const regex = new RegExp(`(${keyword})`, 'g');
            text = text.replace(regex, '<span class="bg-orange-300 text-orange-900 font-semibold px-1 rounded">$1</span>');
        });
        
        // Í∏∞Îä•Ïñ¥ Ïä§ÌÉÄÏùºÎßÅ
        this.keywordData.functionWords.forEach(word => {
            const regex = new RegExp(`(${word})`, 'g');
            text = text.replace(regex, '<span class="text-gray-500">$1</span>');
        });
        
        this.readingText.innerHTML = text.replace(/\n/g, '<br>');
    }

    applyHideMode() {
        let text = this.keywordData.text || '';
        
        // ÌÇ§ÏõåÎìúÎäî Í∑∏ÎåÄÎ°ú Ïú†ÏßÄ
        this.keywordData.keywords.forEach(keyword => {
            const regex = new RegExp(`(${keyword})`, 'g');
            text = text.replace(regex, '<span class="bg-orange-300 text-orange-900 font-semibold px-1 rounded">$1</span>');
        });
        
        // Í∏∞Îä•Ïñ¥ Ïà®Í∏∞Í∏∞ (Ï†êÏúºÎ°ú ÎåÄÏ≤¥)
        this.keywordData.functionWords.forEach(word => {
            const regex = new RegExp(`(${word})`, 'g');
            text = text.replace(regex, '<span class="text-gray-300">' + '.'.repeat(word.length) + '</span>');
        });
        
        this.readingText.innerHTML = text.replace(/\n/g, '<br>');
    }

    async startReading() {
        if (this.isReading) return;
        
        this.isReading = true;
        this.startTime = Date.now();
        this.recognizedKeywords.clear();
        this.subvocalizationCount = 0;
        this.keywordRecognition = 0;
        
        // UI ÏóÖÎç∞Ïù¥Ìä∏
        this.startBtn.disabled = true;
        this.stopBtn.disabled = false;
        this.keywordIndicator.textContent = 'üî¥ Ïó∞Ïäµ Ï§ë';
        this.keywordIndicator.className = 'text-red-600';
        
        // ÌÉÄÏù¥Î®∏ ÏãúÏûë
        this.startTimer();
        
        // ÌÇ§ÏõåÎìú Ïù∏Ïãù ÏãúÎÆ¨Î†àÏù¥ÏÖò ÏãúÏûë
        this.startKeywordRecognition();
        
        // ÏÜçÎ∞úÏùå Í∞êÏßÄ ÏãúÎÆ¨Î†àÏù¥ÏÖò ÏãúÏûë
        this.startSubvocalizationDetection();
        
        // Ïã§ÏãúÍ∞Ñ ÌîºÎìúÎ∞± ÏãúÏûë
        this.startRealTimeFeedback();
        
        console.log('ÌïµÏã¨ Îã®Ïñ¥ Ï∞æÍ∏∞ Ïó∞Ïäµ ÏãúÏûë - Î™®Îìú:', this.currentMode);
    }

    stopReading() {
        if (!this.isReading) return;
        
        this.isReading = false;
        
        // ÌÉÄÏù¥Î®∏ Ï§ëÏßÄ
        this.stopTimer();
        
        // ÌÇ§ÏõåÎìú Ïù∏Ïãù Ï§ëÏßÄ
        this.stopKeywordRecognition();
        
        // ÏÜçÎ∞úÏùå Í∞êÏßÄ Ï§ëÏßÄ
        this.stopSubvocalizationDetection();
        
        // UI ÏóÖÎç∞Ïù¥Ìä∏
        this.startBtn.disabled = false;
        this.stopBtn.disabled = true;
        this.keywordIndicator.textContent = '‚ö™ ÎåÄÍ∏∞ Ï§ë';
        this.keywordIndicator.className = 'text-muted-foreground';
        
        // Í≤∞Í≥º Í≥ÑÏÇ∞ Î∞è ÌëúÏãú
        this.calculateResults();
        this.showResults();
        
        console.log('ÌïµÏã¨ Îã®Ïñ¥ Ï∞æÍ∏∞ Ïó∞Ïäµ Ï¢ÖÎ£å');
    }

    resetExercise() {
        this.stopReading();
        
        // Î™®Îì† ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî
        this.recognizedKeywords.clear();
        this.subvocalizationCount = 0;
        this.keywordRecognition = 0;
        
        // UI Ï¥àÍ∏∞Ìôî
        this.keywordProgress.textContent = '0%';
        this.currentWpm.textContent = '0';
        this.wpmProgress.style.width = '0%';
        this.keywordRecognitionElement.textContent = '0%';
        this.recognitionProgress.style.width = '0%';
        this.subvocalizationIndicator.className = 'w-3 h-3 bg-muted-foreground rounded-full';
        this.subvocalizationText.textContent = 'ÎåÄÍ∏∞ Ï§ë';
        this.realTimeFeedback.textContent = 'Ïó∞ÏäµÏùÑ ÏãúÏûëÌïòÎ©¥ Ïã§ÏãúÍ∞Ñ ÌîºÎìúÎ∞±Ïù¥ ÌëúÏãúÎê©ÎãàÎã§.';
        this.exerciseResults.classList.add('hidden');
        
        // ÌÇ§ÏõåÎìú ÌÉúÍ∑∏ Ï¥àÍ∏∞Ìôî
        document.querySelectorAll('.keyword-tag').forEach(tag => {
            tag.className = 'px-2 py-1 bg-orange-100 text-orange-800 text-xs rounded border border-orange-200 keyword-tag';
        });
        
        console.log('ÌïµÏã¨ Îã®Ïñ¥ Ï∞æÍ∏∞ Ïó∞Ïäµ Ï¥àÍ∏∞Ìôî');
    }

    startKeywordRecognition() {
        // ÌÇ§ÏõåÎìú Ïù∏Ïãù ÏãúÎÆ¨Î†àÏù¥ÏÖò (ÎûúÎç§ Í∞ÑÍ≤©ÏúºÎ°ú ÌÇ§ÏõåÎìú Ïù∏Ïãù)
        this.keywordInterval = setInterval(() => {
            if (this.isReading) {
                const remainingKeywords = this.keywordData.keywords.filter(
                    keyword => !this.recognizedKeywords.has(keyword)
                );
                
                if (remainingKeywords.length > 0) {
                    const randomKeyword = remainingKeywords[Math.floor(Math.random() * remainingKeywords.length)];
                    this.recognizeKeyword(randomKeyword);
                }
            }
        }, 2000 + Math.random() * 3000); // 2-5Ï¥à Í∞ÑÍ≤©
    }

    stopKeywordRecognition() {
        if (this.keywordInterval) {
            clearInterval(this.keywordInterval);
            this.keywordInterval = null;
        }
    }

    recognizeKeyword(keyword) {
        this.recognizedKeywords.add(keyword);
        
        // ÌÇ§ÏõåÎìú ÌÉúÍ∑∏ ÌïòÏù¥ÎùºÏù¥Ìä∏
        const keywordTags = document.querySelectorAll('.keyword-tag');
        keywordTags.forEach(tag => {
            if (tag.textContent.trim() === keyword) {
                tag.className = 'px-2 py-1 bg-green-100 text-green-800 text-xs rounded border border-green-200 keyword-tag font-semibold';
            }
        });
        
        // Ïù∏ÏãùÎ•† ÏóÖÎç∞Ïù¥Ìä∏
        this.updateKeywordRecognition();
    }

    updateKeywordRecognition() {
        const totalKeywords = this.keywordData.keywords.length;
        const recognizedCount = this.recognizedKeywords.size;
        this.keywordRecognition = Math.round((recognizedCount / totalKeywords) * 100);
        
        this.keywordRecognitionElement.textContent = `${this.keywordRecognition}%`;
        this.recognitionProgress.style.width = `${this.keywordRecognition}%`;
        
        // ÏßÑÌñâÎ•† ÏóÖÎç∞Ïù¥Ìä∏
        this.keywordProgress.textContent = `${this.keywordRecognition}%`;
    }

    startTimer() {
        this.timer = setInterval(() => {
            if (this.startTime) {
                const elapsed = Date.now() - this.startTime;
                const minutes = Math.floor(elapsed / 60000);
                const seconds = Math.floor((elapsed % 60000) / 1000);
                this.keywordTime.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                
                // WPM Í≥ÑÏÇ∞ (ÏãúÎÆ¨Î†àÏù¥ÏÖò)
                const wordCount = Math.round(this.recognizedKeywords.size * 8); // ÏòàÏÉÅ Îã®Ïñ¥ Ïàò
                const wpm = Math.round(wordCount / (elapsed / 60000));
                this.currentWpm.textContent = wpm;
                
                const wpmProgress = Math.min(100, (wpm / 250) * 100);
                this.wpmProgress.style.width = `${wpmProgress}%`;
            }
        }, 1000);
    }

    stopTimer() {
        if (this.timer) {
            clearInterval(this.timer);
            this.timer = null;
        }
    }

    startSubvocalizationDetection() {
        // ÏÜçÎ∞úÏùå Í∞êÏßÄ ÏãúÎÆ¨Î†àÏù¥ÏÖò (ÎûúÎç§ Í∞ÑÍ≤©ÏúºÎ°ú Í∞êÏßÄ)
        this.subvocalizationInterval = setInterval(() => {
            if (Math.random() < 0.2) { // 20% ÌôïÎ•†Î°ú ÏÜçÎ∞úÏùå Í∞êÏßÄ
                this.detectSubvocalization();
            }
        }, 4000 + Math.random() * 5000); // 4-9Ï¥à Í∞ÑÍ≤©
    }

    stopSubvocalizationDetection() {
        if (this.subvocalizationInterval) {
            clearInterval(this.subvocalizationInterval);
            this.subvocalizationInterval = null;
        }
    }

    detectSubvocalization() {
        this.subvocalizationCount++;
        
        // UI ÏóÖÎç∞Ïù¥Ìä∏
        this.subvocalizationIndicator.className = 'w-3 h-3 bg-red-500 rounded-full';
        this.subvocalizationText.textContent = 'ÏÜçÎ∞úÏùå Í∞êÏßÄÎê®';
        this.subvocalizationText.className = 'text-sm text-red-600';
        
        // 2Ï¥à ÌõÑ ÏõêÎûò ÏÉÅÌÉúÎ°ú Î≥µÏõê
        setTimeout(() => {
            this.subvocalizationIndicator.className = 'w-3 h-3 bg-green-500 rounded-full';
            this.subvocalizationText.textContent = 'Ï†ïÏÉÅ';
            this.subvocalizationText.className = 'text-sm text-green-600';
        }, 2000);
    }

    startRealTimeFeedback() {
        const feedbackMessages = [
            'Ï¢ãÏäµÎãàÎã§! ÌÇ§ÏõåÎìúÏóê ÏßëÏ§ëÌïòÍ≥† ÏûàÏäµÎãàÎã§.',
            'ÌïµÏã¨ Îã®Ïñ¥Î•º Îπ†Î•¥Í≤å Ïù∏ÏãùÌïòÏÑ∏Ïöî.',
            'Í∏∞Îä•Ïñ¥Îäî Îπ†Î•¥Í≤å Í±¥ÎÑàÎõ∞ÏÑ∏Ïöî.',
            'ÏùòÎØ∏ Ï§ëÏã¨ÏúºÎ°ú ÏùΩÏñ¥Î≥¥ÏÑ∏Ïöî.',
            'ÏÜçÎ∞úÏùå ÏóÜÏù¥ ÏãúÍ∞ÅÏ†ÅÏúºÎ°ú ÏùΩÏúºÏÑ∏Ïöî.',
            'ÌÇ§ÏõåÎìú Ïù∏ÏãùÎ•†Ïù¥ ÎÜíÏïÑÏßÄÍ≥† ÏûàÏäµÎãàÎã§.'
        ];
        
        this.feedbackInterval = setInterval(() => {
            if (this.isReading) {
                const randomMessage = feedbackMessages[Math.floor(Math.random() * feedbackMessages.length)];
                this.realTimeFeedback.textContent = randomMessage;
            }
        }, 5000);
    }

    calculateResults() {
        const elapsed = Date.now() - this.startTime;
        const minutes = elapsed / 60000;
        
        // WPM Í≥ÑÏÇ∞ (ÏãúÎÆ¨Î†àÏù¥ÏÖò)
        const wordCount = Math.round(this.recognizedKeywords.size * 8); // ÏòàÏÉÅ Îã®Ïñ¥ Ïàò
        const wpm = Math.round(wordCount / minutes);
        
        // ÌÇ§ÏõåÎìú Ïù∏ÏãùÎ•†
        const finalRecognition = this.keywordRecognition;
        
        // Ïó∞Ïäµ ÏãúÍ∞Ñ
        const practiceMinutes = Math.floor(elapsed / 60000);
        const practiceSeconds = Math.floor((elapsed % 60000) / 1000);
        const practiceTimeStr = `${practiceMinutes.toString().padStart(2, '0')}:${practiceSeconds.toString().padStart(2, '0')}`;
        
        // Í≤∞Í≥º Ï†ÄÏû•
        this.results = {
            wpm: wpm,
            recognition: finalRecognition,
            practiceTime: practiceTimeStr,
            subvocalizationCount: this.subvocalizationCount,
            recognizedKeywords: this.recognizedKeywords.size
        };
    }

    showResults() {
        // Í≤∞Í≥º ÌëúÏãú
        this.finalWpm.textContent = this.results.wpm;
        this.finalRecognition.textContent = `${this.results.recognition}%`;
        this.practiceTime.textContent = this.results.practiceTime;
        
        // AI ÌîºÎìúÎ∞± ÏÉùÏÑ±
        this.generateAIFeedback();
        
        // Í≤∞Í≥º ÏÑπÏÖò ÌëúÏãú
        this.exerciseResults.classList.remove('hidden');
    }

    generateAIFeedback() {
        const { wpm, recognition, subvocalizationCount } = this.results;
        
        let feedback = '';
        
        if (recognition >= 90) {
            feedback = 'ÌõåÎ•≠Ìï©ÎãàÎã§! ÌÇ§ÏõåÎìú Ïù∏ÏãùÎ•†Ïù¥ Îß§Ïö∞ ÎÜíÏäµÎãàÎã§. Ïù¥Ï†ú Îçî Îπ†Î•∏ ÏÜçÎèÑÎ°ú ÎèÑÏ†ÑÌï¥Î≥¥ÏÑ∏Ïöî.';
        } else if (recognition >= 70) {
            feedback = 'Ï¢ãÏùÄ ÏãúÏûëÏûÖÎãàÎã§! ÌÇ§ÏõåÎìú Ïù∏ÏãùÎ•†ÏùÑ Îçî ÎÜíÏù¥Í∏∞ ÏúÑÌï¥ ÏßëÏ§ëÌï¥Î≥¥ÏÑ∏Ïöî.';
        } else {
            feedback = 'ÌÇ§ÏõåÎìú Ïù∏ÏãùÏùÑ Îçî Ïó∞ÏäµÌï¥Î≥¥ÏÑ∏Ïöî. ÌïµÏã¨ Îã®Ïñ¥Ïóê ÏßëÏ§ëÌïòÍ≥† ÏùòÎØ∏ Ï§ëÏã¨ÏúºÎ°ú ÏùΩÏúºÏÑ∏Ïöî.';
        }
        
        if (subvocalizationCount > 2) {
            feedback += ' ÏÜçÎ∞úÏùåÏù¥ ÎßéÏù¥ Í∞êÏßÄÎêòÏóàÏäµÎãàÎã§. ÏãúÍ∞ÅÏ†ÅÏúºÎ°ú ÏùΩÎäî Ïó∞ÏäµÏùÑ Îçî Ìï¥Î≥¥ÏÑ∏Ïöî.';
        }
        
        if (wpm < 200) {
            feedback += ' ÏùΩÍ∏∞ ÏÜçÎèÑÎ•º ÎÜíÏù¥Í∏∞ ÏúÑÌï¥ Îçî ÎßéÏùÄ Ïó∞ÏäµÏù¥ ÌïÑÏöîÌï©ÎãàÎã§.';
        }
        
        if (this.currentMode === 'hide') {
            feedback += ' Ïà®ÍπÄ Î™®ÎìúÏóêÏÑú Ï¢ãÏùÄ ÏÑ±Í≥ºÎ•º Î≥¥ÏòÄÏäµÎãàÎã§. ÌïòÏù¥ÎùºÏù¥Ìä∏ Î™®ÎìúÎèÑ ÏãúÎèÑÌï¥Î≥¥ÏÑ∏Ïöî.';
        } else {
            feedback += ' ÌïòÏù¥ÎùºÏù¥Ìä∏ Î™®ÎìúÏóêÏÑú Ï¢ãÏùÄ ÏÑ±Í≥ºÎ•º Î≥¥ÏòÄÏäµÎãàÎã§. Ïà®ÍπÄ Î™®ÎìúÎèÑ ÏãúÎèÑÌï¥Î≥¥ÏÑ∏Ïöî.';
        }
        
        this.aiFeedbackText.textContent = feedback;
    }
}

// Ï†ÑÏó≠ Ìï®ÏàòÎì§
function saveResults() {
    // Í≤∞Í≥º Ï†ÄÏû• Í∏∞Îä• (Ìñ•ÌõÑ Íµ¨ÌòÑ)
    alert('Í≤∞Í≥ºÍ∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§!');
}

// ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ï¥àÍ∏∞Ìôî
document.addEventListener('DOMContentLoaded', () => {
    window.keywordExercise = new KeywordReadingExercise();
    
    // ÌéòÏù¥ÏßÄ Ïñ∏Î°úÎìú Ïãú Ï†ïÎ¶¨
    window.addEventListener('beforeunload', () => {
        if (window.keywordExercise) {
            window.keywordExercise.stopReading();
        }
    });
});

// ÌÇ§Î≥¥Îìú Îã®Ï∂ïÌÇ§ ÏïàÎÇ¥
document.addEventListener('keydown', (e) => {
    if (e.code === 'KeyH' && e.ctrlKey) {
        e.preventDefault();
        alert('ÌÇ§Î≥¥Îìú Îã®Ï∂ïÌÇ§:\n- Ïä§ÌéòÏù¥Ïä§Î∞î: Ïó∞Ïäµ ÏãúÏûë/Ï§ëÏßÄ\n- ESC: Ïó∞Ïäµ Ï§ëÏßÄ\n- H: ÌïòÏù¥ÎùºÏù¥Ìä∏ Î™®Îìú\n- D: Ïà®ÍπÄ Î™®Îìú');
    }
}); 